{% render 'partials/header.liquid' %}

{% render 'partials/aside.liquid' %}
<main id="main-content" style="view-transition-name: project-{{ experiment.id }}">
  <section class="experminets-layout">

    <h1 class="intro-title">Experiments overview</h1>

    <div class="experiment-options">
      <form class="filters" id="sort-form" method="GET" action="/">
        <label class="sort-label" for="sort">Sort:</label>
        <select id="sort" name="sort" onchange="this.form.submit()">
          <option value="recent" {% if sort=='recent' %}selected{% endif %}>Most recent</option>
          <option value="oldest" {% if sort=='oldest' %}selected{% endif %}>Least recent</option>
        </select>
      </form>

      <a href="#post-form" class="button button-light" id="open-aside">Create Experiment</a>
    </div>


    {% if experiments and experiments.size > 0 %}
    <div class="experiment-board">
      {% for experiment in experiments %}

      <article class="experiment">
        <h3>{{ experiment.name }}</h3>
        <p>{{ experiment.description | truncate: 250 }}</p>

        <div class="experiment-times">
          <p><strong>Created: </strong>{{ experiment.createdAt | date:"%d-%m-%Y %H:%M" }}</p>
          <p><strong>Updated: </strong><time>{{ experiment.updatedAt | date: "%d-%m-%Y %H:%M" }}</time></p>
        </div>

        <div class="experiment-buttons">
          <a class="experiment-link" href="/experiment/{{ experiment.id }}">See Project</a>

          <form action="/experiment/{{ experiment.id }}/delete" method="POST" class="delete-home">
            <button type="submit" class="delete-button">Delete
              <svg class="bin" fill="#ffffff" height="20px" width="20px" version="1.1" id="Layer_1"
                xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 458.5 458.5"
                xml:space="preserve">
                <g>
                  <g>
                    <g>
                      <path d="M382.078,57.069h-89.78C289.128,25.075,262.064,0,229.249,0S169.37,25.075,166.2,57.069H76.421
			                  c-26.938,0-48.854,21.916-48.854,48.854c0,26.125,20.613,47.524,46.429,48.793V399.5c0,32.533,26.467,59,59,59h192.508
				                c32.533,0,59-26.467,59-59V154.717c25.816-1.269,46.429-22.668,46.429-48.793C430.933,78.985,409.017,57.069,382.078,57.069z
				                M229.249,30c16.244,0,29.807,11.673,32.76,27.069h-65.52C199.442,41.673,213.005,30,229.249,30z M354.503,399.501
				                c0,15.991-13.009,29-29,29H132.995c-15.991,0-29-13.009-29-29V154.778c12.244,0,240.932,0,250.508,0V399.501z M382.078,124.778
				                c-3.127,0-302.998,0-305.657,0c-10.396,0-18.854-8.458-18.854-18.854S66.025,87.07,76.421,87.07h305.657
				                c10.396,0,18.854,8.458,18.854,18.854S392.475,124.778,382.078,124.778z" />
                      <path d="M229.249,392.323c8.284,0,15-6.716,15-15V203.618c0-8.284-6.715-15-15-15c-8.284,0-15,6.716-15,15v173.705
			                    	C214.249,385.607,220.965,392.323,229.249,392.323z" />
                      <path d="M306.671,392.323c8.284,0,15-6.716,15-15V203.618c0-8.284-6.716-15-15-15s-15,6.716-15,15v173.705
				                    C291.671,385.607,298.387,392.323,306.671,392.323z" />
                      <path d="M151.828,392.323c8.284,0,15-6.716,15-15V203.618c0-8.284-6.716-15-15-15c-8.284,0-15,6.716-15,15v173.705
				                    C136.828,385.607,143.544,392.323,151.828,392.323z" />
                    </g>
                  </g>
                </g>
              </svg>
            </button>
          </form>

        </div>

      </article>

      {% endfor %}
    </div>
    {% else %}

    <p>No projects found!</p>
    {% endif %}

  </section>

</main>

<script type="module">


  if ('fetch' in window && 'DOMParser' in window) {

    document.addEventListener('submit', async function (event) {

      const form = event.target;

      if (!form.hasAttribute('data-enhanced')) return;

      event.preventDefault();

      const submitButton = form.querySelector('button[type="submit"]');
      const originalText = submitButton.innerHTML;

      submitButton.disabled = true;
      submitButton.innerHTML = 'Creating...';

      const formData = new FormData(form); // https://developer.mozilla.org/en-US/docs/Web/API/FormData

      if (event.submitter) {
        formData.append(event.submitter.name, event.submitter.value);
      }

      // turn form object in normal js object ( [["name", "test"], ["description", "abc"]] -> { name: "test", description: "abc"} )
      const formRes = Object.fromEntries(formData.entries());

      const response = await fetch(form.action, { // get the action in the form
        method: form.method, //post
        headers: {
          'Content-Type': 'application/json', //send json
          'Accept': 'application/json' // recieve json 
        },
        body: JSON.stringify(formRes)
      });

      if (!response.ok) { // if posting fails give user an error
        submitButton.innerHTML = 'Error!';
        submitButton.disabled = false;
        return;
      }

      const { id: newId } = await response.json(); //await the id and convert to json

      submitButton.innerHTML = 'âœ“ Created!'; // if id is fetched give user feedback it worked
      setTimeout(() => {
        //window.location.reload(); 
        window.location.href = `/experiment/${newId}`; //redirect to the new created page
      }, 1500);
    });
  }


</script>




{% render 'partials/footer.liquid'%}